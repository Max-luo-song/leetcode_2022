/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 /*
    算法思想：后序遍历思想，目的是左右中，先变成中右左，再反转得到目的。因为是栈，所以先左进后右进
            整体和之前的双栈法一个思路。只不过另一个栈，最后用reverse直接代替了
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ending;
        if (root == NULL)
            return ending;
        stack<TreeNode *> st;
        st.push(root);
        while (!st.empty()) {
            TreeNode *p = st.top();
            st.pop();
            ending.push_back(p->val);
            if (p->left != NULL)
                st.push(p->left);
            if (p->right != NULL)
                st.push(p->right);
        }
        reverse(ending.begin(), ending.end());
        return ending;
    }
};
