/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
/*
    算法思想1：使用递归法，确定返回条件，使用后序遍历，从左右选出大的加1
    算法思想2：可以使用迭代法，利用队列层次遍历完成
*/
class Solution {
public:
    
    int maxDepth(TreeNode* root) {
        if (root == NULL)
            return 0;
        int count = 0;
        int left_count = maxDepth(root->left);
        int right_count = maxDepth(root->right);
        count += max(left_count, right_count) +1 ;
        return count;
    }
};
