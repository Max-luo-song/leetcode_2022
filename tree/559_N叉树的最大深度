/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
/*
    算法思想：思路和二叉树的深度相同，求最大深度。利用递归方法，区别在于二叉树是比左右高度，n叉树比较数组内所有的高度。
*/
class Solution {
public:
    int maxDepth(Node* root) {
        if (root == NULL)
            return 0;
        int max_size = 0;
        for (int i=0; i<root->children.size(); i++) {
            Node *p = root->children[i];
            int temp = maxDepth(p);
            if (temp > max_size)
                max_size = temp;
        }
        return max_size+1;
    }
};
