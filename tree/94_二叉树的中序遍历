/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 /*
    算法思想：非递归实现中序遍历
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ending;
        if (root == NULL)
            return ending;
        stack<TreeNode *> st;
        TreeNode *p = root;
        while (!st.empty() || p != NULL) {
            if (p != NULL) {
                st.push(p);
                p = p->left;
            }
            else {
                p = st.top();
                st.pop();
                ending.push_back(p->val);
                p = p->right;
            }
        }
        return ending;
    }
};
