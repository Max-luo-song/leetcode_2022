/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
/*
    算法思想：本题用来判断平衡二叉树，思想很简单，如果左右高度差不超过1就返回ture。本题是用-1来代替
*/
class Solution {
public:
    int getDepth(TreeNode* root) {
        if (root == NULL)
            return true;
        int left_depth = getDepth(root->left);
        if (left_depth == -1)
            return -1;
        int right_depth = getDepth(root->right);
        if (right_depth == -1)
            return -1;
        return abs(left_depth-right_depth)>1 ? -1:1+max(left_depth,right_depth);
    }
    bool isBalanced(TreeNode *root) {
        return getDepth(root) == -1 ? false:true;
    }
};
