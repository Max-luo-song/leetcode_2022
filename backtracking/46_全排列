/*
    算法思想：本题是排列问题，用回溯解决。对于排列不使用startIndex,使用used数组做标记。每轮从0开始只要不选到相同的就可以
*/
class Solution {
public:
    vector<vector<int>> ending;
    vector<int> temp;
    void backtracking(vector<int> nums, vector<bool>&used) {
        if (temp.size() == nums.size()) {
            ending.push_back(temp);
            return ;
        }
        // 排列从0开始
        for (int i=0; i<nums.size(); i++) {
            if (used[i] == true)
                continue;
            temp.push_back(nums[i]);
            used[i] = true;
            backtracking(nums, used);
            used[i] = false;
            temp.pop_back();
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<bool> used(nums.size(), false);
        backtracking(nums, used);
        return ending;
    }
};
