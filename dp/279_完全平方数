/*
    算法思想：本题就是一道完全背包问题，背包大小为n，物品值为平方数(nums)
    按照组合完全背包模板就行，最小数量决定了初始化和递归式
*/
class Solution {
public:
    int numSquares(int n) {
        vector<int> nums;
        for (int i=1; i<=sqrt(n); i++) {
            if (i*i <= n)
                nums.push_back(i*i);
        }
        vector<int> dp(n+1, INT_MAX);
        dp[0] = 0;
        for (int i=0; i<nums.size(); i++) {
            for (int j=nums[i]; j<=n; j++) {
                if (dp[j-nums[i]] != INT_MAX) {
                    dp[j] = min(dp[j], dp[j-nums[i]]+1);
                }
            }
        }
        return dp[n];
    }
};
