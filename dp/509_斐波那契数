/* 算法思想：递归法，有重复元素计算过程
class Solution {
public:
    int fib(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        else
            return fib(n-1)+fib(n-2);
    }
};*/
// 算法思想2：动态规划
class Solution {
public:
    int fib(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        int a[n+1];
        // dp数组初始化
        a[0] = 0;
        a[1] = 1;
        for (int i=2; i<=n; i++) {
            a[i] = a[i-1]+a[i-2]; // 状态转移方程
        }
        return a[n];
    }
};
