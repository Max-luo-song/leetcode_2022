/*
    算法思想：本题可以抽象成一个01背包问题，每一个字符串选和不选。背包的大小有两个维度
    先物品再背包，背包二维。价值就是每个加一，统计onenum和zeronum用于状态转移
*/
class Solution {
public:
    int findMaxForm(vector<string>& strs, int m, int n) {
        vector<vector<int>> dp(m+1, vector<int>(n+1, 0));
        for (string str:strs) {
            int zeronum = 0;
            int onenum = 0;
            for (int i=0; i<str.length(); i++) {
                if (str[i] == '0')
                    zeronum++;
                else
                    onenum++;
            }
            for (int i=m; i>= zeronum; i--) {
                for (int j=n; j>=onenum; j--) {
                    dp[i][j] = max(dp[i][j], dp[i-zeronum][j-onenum]+1);
                }
            }
        }
        return dp[m][n];
    }
};
