/*
    算法思想：本题dp[i]和含义是i阶最多的跳楼方法。
    第i层由前两个决定
*/
class Solution {
public:
    int climbStairs(int n) {
        if (n == 1)
            return 1;
        else if (n == 2)
            return 2;
        int dp[n+1];
        // 初始化
        dp[1] = 1;
        dp[2] = 2;
        for (int i=3; i<=n; i++) {
            dp[i] = dp[i-1] + dp[i-2]; // 状态转移方程
        }
        return dp[n];
    }
};
