/*
    算法思想：本题是寻找区分最大区间数，区间内元素不能在其他区间出现。
    实现的方法是统计每个字符的最远出现区间，并在遍历过程中更新这个区间段的最右。当索引等于最右的时候，说明一个区间段结束了。因为本题要求区间个数，所以更新left,right差就是区间个数
*/
class Solution {
public:
    vector<int> partitionLabels(string s) {
        vector<int> a(26,-1);
        for (int i=0; i<s.length(); i++) {
            a[s[i]-'a'] = i;
        }
        vector<int> result;
        int left = 0;
        int right = 0;
        for (int i=0; i<s.length(); i++) {
            right = max(right, a[s[i]-'a']);
            if (i == right) {
                result.push_back(right-left+1);
                left = i+1; // 注意这里一定要+1，新区间的起点
            }
        }
        return result;
    }
};
