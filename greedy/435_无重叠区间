/*
    算法思想：本题求的移除区间的最小数量。换种计算方法：总区间数-不重叠区间数=移除重叠区间数(保证最少)
    计算不重叠区间数：排序，按照右边界最小排序。遍历顺序从左往右。
*/
class Solution {
public:
    // 按照右边界小
    static bool cmp(const vector<int>& a, const vector<int>& b) {
        return a[1]<b[1];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end(), cmp);
        int count = 1; // 非重叠区间个数
        int right = intervals[0][1];
        for (int i=1; i<intervals.size(); i++) {
            if (intervals[i][0] >= right) {
                right = intervals[i][1]; // 分割点在右边
                count++;
            }
        }
        return intervals.size()-count;// 注意这里要减
    }
};
